"""
Indar Hafian
21120122120026
"""



import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from scipy.optimize import curve_fit

def power_law(x, a, b):
    return a * np.power(x, b)

def fit_power_law_model(X, y):
    X_nonzero = X[X > 0]
    y_nonzero = y[X > 0]
    params, _ = curve_fit(power_law, X_nonzero, y_nonzero, p0=[1, 2])
    return params

def predict_power_law_model(X, params):
    a, b = params
    return a * np.power(X, b)

def calculate_rms_error(y_true, y_pred):
    return np.sqrt(mean_squared_error(y_true, y_pred))

data_path = 'Student_Performance.csv'
data = pd.read_csv(data_path)
X = data['Sample Question Papers Practiced'].values.reshape(-1, 1)
y = data['Performance Index'].values

linear_model = LinearRegression()
linear_model.fit(X, y)

y_predict_linear = linear_model.predict(X)

rms_linear = calculate_rms_error(y, y_predict_linear)

params = fit_power_law_model(X.flatten(), y)

dense_X = np.linspace(X.min(), X.max(), 300)

y_pred_power = predict_power_law_model(dense_X, params)

rms_power = calculate_rms_error(y, predict_power_law_model(X.flatten(), params))

fig, axs = plt.subplots(1, 2, figsize=(16, 6))

axs[0].scatter(X, y, color='blue', label='Data Aktual', s=2, alpha=1)
axs[0].plot(X, y_predict_linear, color='cyan', label=f'Regresi Linier (RMS Error: {rms_linear:.2f})')
axs[0].set_xlim(0, 10)
axs[0].set_xlabel('Sample Question Papers Practiced')
axs[0].set_ylabel('Performance Index')
axs[0].set_title('Regresi Linier')
axs[0].legend()
axs[0].grid(True, linestyle='-', alpha=0.5)

axs[1].scatter(X, y, color='blue', label='Data Aktual', s=2, alpha=1)
axs[1].plot(dense_X, y_pred_power, color='red', label=f'Regresi Pangkat (RMS Error: {rms_power:.3f})')
axs[1].set_xlim(0, 10)
axs[1].set_xlabel('Sample Question Papers Practiced')
axs[1].set_ylabel('Performance Index')
axs[1].set_title('Regresi Pangkat Sederhana')
axs[1].legend()
axs[1].grid(True, linestyle='-', alpha=0.5)

plt.tight_layout()
plt.show()

print(f'RMS Error Linier: {rms_linear:.2f}')
print(f'RMS Error Pangkat: {rms_power:.3f}')
